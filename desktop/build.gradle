apply plugin: 'application'

sourceSets {
    main {
        java {
            srcDirs = ['java']
        }
        resources {
            srcDirs = ['resources']
        }
    }
}

sourceSets.main.resources.srcDirs += [ rootProject.file('selfdrive/assets').path ]
mainClassName = 'ai.flow.app.lwjgl3.Lwjgl3Launcher'
eclipse.project.name = appName + '-lwjgl3'
sourceCompatibility = 8.0

dependencies {
	implementation project(':ui')
	implementation project(':modeld')
	implementation project(":sensord")
	implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
	implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
	implementation "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
	implementation "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
	implementation project(path: ':common')
	implementation project(path: ':launcher')
	implementation project(':hardware')
}

import org.gradle.internal.os.OperatingSystem

run {
	workingDir = rootProject.file('.').path
	setIgnoreExitValue(true)
	environment 'OMP_NUM_THREADS', '2'
    if (OperatingSystem.current() == OperatingSystem.MAC_OS) {
		// Required to run LWJGL3 Java apps on MacOS
		jvmArgs += "-XstartOnFirstThread"
	}
}

jar {
// sets the name of the .jar file this produces to the name of the game or app.
	archiveBaseName.set(appName)
// the duplicatesStrategy matters starting in Gradle 7.0; this setting works.
	duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
	dependsOn configurations.runtimeClasspath
	from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
// these "exclude" lines remove some unnecessary duplicate files in the output JAR.
	exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')
	dependencies {
		exclude('META-INF/INDEX.LIST', 'META-INF/maven/**')
	}
// setting the manifest makes the JAR runnable.
	manifest {
		attributes 'Main-Class': project.mainClassName
	}
// this last step may help on some OSes that need extra instruction to make runnable JARs.
	doLast {
		file(archiveFile).setExecutable(true, false)
	}
}

java.targetCompatibility = JavaVersion.VERSION_1_8
